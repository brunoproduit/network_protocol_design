import hashlib
import re
import os

class masterKey:

	def __init__(self):
		self.password = ""
		self.keyMaster = False
	def getMasterKey(self):
		keyAddress = input("Insert Master Key Path:")
		#my_file = Path(str(keyAddress))
		if os.path.isfile(keyAddress):
			return True
		else:
			return False
	def getPassword(self):
		return input("Please input the password:")		
	
	def getData(self):
		self.keyMaster = self.getMasterKey()
		#if self.keyMaster == True:
		#	self.password = self.getPassword()	
		#else:
		#	print("The file didn't find.")
	
class yourKey:

	def __init__(self):
		self.password = ""
		self.keyMaster = False
	def getMasterKey(self):
		keyAddress = input("Insert Master Key Path:")
		#my_file = Path(str(keyAddress))
		if os.path.isfile(keyAddress):
			return True
		else:
			return False
	def getPassword(self):
		return input("Please input the password:")		
	
	def getData(self):
		self.keyMaster = self.getMasterKey()
		#if self.keyMaster == True:
		#	self.password = self.getPassword()	
		#else:
		#	print("The file didn't find.")
			

class commandFunction:
	
	def __init__(self):
		self.destination = ""
		self.file = bin(0)
		self.text = bin(0)
		self.command = ""
		self.sourceAddress = ""

	#Replace the function for getting mail address
	def mailtoMD5(self):
		m = hashlib.md5()
		m.update(str.encode("sample@ttu.ee"))
		self.sourceAddress = m.hexdigest()
		
	def printCommands(self):
		print("@all: send message for all")
		print("@file: send a file")
		print("@quit: quit chating")
	
	def commandRecogination(self):
		if self.command == "@all":
			print("all")
		elif self.command == "@file":
			print("file")
		elif self.command == "@quit":
			print("quit")
		
#		return hashCode
#def mailtoMD5(mailAddress):
#	if mailAddress == "all":
#		return 20*"0"
#	else:
#		m = hashlib.md5()
#		m.update(str.encode(mailAddress))
#		hashCode = m.hexdigest()
#		return hashCode
			
#def validateAddress(address):
#	return re.match(r"[^@]+@[^@]+\.[^@]+", address)
		
#def executeCommand(inputCommand):
	# checking for address command is starting with @
#	if inputCommand.startswith('@'):
#		address = inputCommand[1:].lower()
#		if validateAddress(address) or address == "all":
#			return mailtoMD5(address)			
#		else:		
#			print("input valid email address")
#	elif inputCommand == "quit":
#		return exitCommand
#	else:
#		print("command must start with @")

#a= uiutils
#sourceAddress = input("Please insert your email address:")
#while  not validateAddress(sourceAddress):
#	sourceAddress = input("Please insert your email address:")
	
#print('Source: ', mailtoMD5(sourceAddress))

#while True:
#	command = input("Please input commands:")
#	executeCommand(command)
	
